#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
require 'fluent/load'

uri = "druby://127.0.0.1:24230" # fixed

require 'optparse'
log_level = nil
log_message = nil
op = OptionParser.new
op.on('-l', '--level LEVEL', "Log level (#{Fluent::Log::LEVEL_TEXT.join(",")})") {|s|
  _ = Fluent::Log.str_to_level(s) # for inspect
  log_level = s.downcase
}
op.on('-m', '--message TEXT', "Log message") {|s|
  log_message = s
}
op.parse!(ARGV)

require 'drb/drb'
DRb::DRbObject.class_eval do
  undef_method :methods
  undef_method :instance_eval
  undef_method :instance_variables
  undef_method :instance_variable_get
end

remote_engine = DRb::DRbObject.new_with_uri(uri)
Fluent.module_eval do
  remove_const(:Engine)
  const_set(:Engine, remote_engine)
end
include Fluent
Encoding.default_internal = nil if Encoding.respond_to?(:default_internal)

Engine.sources[0].log.send(log_level.upcase, log_message)

